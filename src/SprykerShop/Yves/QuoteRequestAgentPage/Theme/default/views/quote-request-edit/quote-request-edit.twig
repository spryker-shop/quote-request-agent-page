{% extends template('page-layout-quote-request', 'QuoteRequestAgentPage') %}

{% define data = {
    title: 'quote_request_page.quote_request.title_edit' | trans({
        '%id%': _view.quoteRequestForm.vars.value.quoteRequestReference,
    }),
    quoteRequestForm: _view.quoteRequestForm,
    quoteRequest: _view.quoteRequestForm.vars.value,
    shipmentGroupForms: _view.quoteRequestForm.latestVersion.shipmentGroups | default([]),
    shipmentGroups: _view.quoteRequestForm.latestVersion.shipmentGroups.vars.value | default([]),
} %}

{% block breadcrumbs %}
    {% set breadcrumbExtend = [
        {
            label: '#' ~ data.quoteRequest.quoteRequestReference,
            url: path('agent/quote-request/details', {quoteRequestReference: data.quoteRequest.quoteRequestReference})
        },
        {
            label: 'quote_request_page.quote_request.breadcrumb.edit' | trans,
        },
    ] %}

    {{ parent() }}
{% endblock %}

{% block content %}
    {% set quote = data.quoteRequest.latestVersion.quote %}

    {{ parent() }}
{% endblock %}

{% block contentInner %}
    {{ form_start(data.quoteRequestForm) }}
    {{ parent() }}
    {{ form_end(data.quoteRequestForm) }}
{% endblock %}

{% block orderInformation %}
    <div class="grid">
        {% for child in data.quoteRequestForm.latestVersion.metadata %}
            {% block orderInformationBoxWrapper %}
                <div class="col col--sm-12 col--xl-6 spacing spacing--big spacing--inner">
                    {{ form_row(child) }}
                </div>
            {% endblock %}
        {% endfor %}
    </div>
{% endblock %}

{% block quoteRequestInformation %}
    {% embed molecule('quote-request-information', 'QuoteRequestPage') ignore missing with {
        data: {
            quoteRequest: data.quoteRequest,
        },
        embed: {
            validUntil: data.quoteRequestForm.validUntil,
        },
    } only %}
        {% block validUntil %}
            <div class="grid grid--middle">
                <span class="col">
                    {{ 'quote_request_page.quote_request.labels.valid_till' | trans }}:
                </span>
                <span class="col spacing-left">
                    {{ form_row(embed.validUntil) }}
                </span>
            </div>
        {% endblock %}

        {% block history %}
            <p>
                {{ 'quote_request_page.quote_request.labels.history' | trans }}:
                <span class="text-secondary">
                    {{ data.quoteRequest.latestVersion ? data.quoteRequest.latestVersion.versionReference : null }}
                </span>
            </p>
        {% endblock %}
    {% endembed %}

    {% block visibilityVersionToggler %}
        {{ form_row(data.quoteRequestForm.isLatestVersionVisible) }}
    {% endblock %}
{% endblock %}

{% block productsForMultiShipments %}
    {% embed organism('product-and-shipment-view', 'QuoteRequestPage') ignore missing with {
        data: {
            quote: quote,
            items: shipmentGroup.items,
            shipment: shipmentGroup.shipment,
            hasMultiShipments: hasMultiShipments,
            isConfiguredBundleEditable: false,
            isConfiguredBundleQuantitySummaryVisible: true,
        },
        embed: {
            itemForms: data.quoteRequestForm.latestVersion.quote.items,
            shipmentGroup: shipmentGroup,
            shipmentGroupForms: data.shipmentGroupForms,
        },
    } only %}
        {% block configuredBundle %}
            {% widget 'QuoteConfiguredBundleWidget' args [data.quote, data.items] with {
                embed: {
                    itemForms: embed.itemForms,
                },
            } only %}
                {% block bundleItem %}
                    {% embed molecule('configured-bundle', 'ConfigurableBundleWidget') ignore missing with {
                        data: {
                            bundle: bundle,
                            items: data.items,
                            currencyIsoCode: data.currencyIsoCode,
                            priceMode: data.priceMode,
                            isEditable: false,
                        },
                        embed: {
                            itemForms: embed.itemForms,
                        },
                    } only %}
                        {% block bundleProductItem %}
                            {% embed molecule('configured-bundle-product', 'ConfigurableBundleWidget') ignore missing with {
                                data: {
                                    product: item,
                                    currencyIsoCode: data.currencyIsoCode,
                                    priceMode: data.priceMode,
                                },
                                embed: {
                                    itemForms: embed.itemForms,
                                },
                            } only %}
                                {% block quantityCol %}
                                    <div class="{{ config.name }}__col col col--sm-4 col--lg-3">
                                        {% block quantity %}
                                            {{ parent() }}

                                            {% for itemForm in embed.itemForms if data.product.groupKey == itemForm.vars.value.groupKey %}
                                                {% set unitSourcePrice = itemForm.sourceUnitGrossPrice is defined ? itemForm.sourceUnitGrossPrice.vars.value : null %}
                                                {% set unitSourcePrice = itemForm.sourceUnitNetPrice is defined ? itemForm.sourceUnitNetPrice.vars.value : unitSourcePrice %}

                                                {% include molecule('source-price-form', 'QuoteRequestAgentPage') with {
                                                    data: {
                                                        priceForm: itemForm,
                                                        checkboxName: 'use_default_price',
                                                        checkboxValue: 1,
                                                        isChecked: unitSourcePrice == null,
                                                        checkboxLabel: 'quote_request_page.quote_request.use_default_price' | trans,
                                                    },
                                                    attributes: {
                                                        price: unitSourcePrice,
                                                    },
                                                } only %}
                                            {% endfor %}

                                        {% endblock %}
                                    </div>
                                {% endblock %}
                            {% endembed %}
                        {% endblock %}
                    {% endembed %}
                {% endblock %}
            {% endwidget %}
        {% endblock %}

        {% block productItem %}
            {% embed molecule('product-cart-item', 'CartPage') ignore missing with {
                data: {
                    product: cartItem,
                },
                embed: {
                    priceMode: data.quote.priceMode,
                    currency: data.quote.currency,
                    itemForms: embed.itemForms,
                },
            } only %}
                {% block additionalInformation %}
                    {% include molecule('quote-request-item-summary', 'QuoteRequestPage') ignore missing with {
                        data: {
                            priceMode: embed.priceMode,
                            unitPrice: data.product.unitPrice | money(true, embed.currency.code),
                            subtotalPrice: data.product.sumSubtotalAggregation | money(true, embed.currency.code),
                            cartItem: data.product,
                            currency: embed.currency,
                        },
                    } only %}
                {% endblock %}

                {% block actions %}
                    {% if data.product.amountSalesUnit is empty %}
                        {{ 'cart.item_quantity' | trans }}:
                        <strong>{{ data.product.quantity }}</strong>

                        {% if data.product.quantitySalesUnit %}
                            {% set value = data.product.quantitySalesUnit.value %}
                            {% set precision = data.product.quantitySalesUnit.precision %}
                            {% set salesUnitName = data.product.quantitySalesUnit.productMeasurementUnit.name | default %}

                            <p>
                                <small class="text-secondary">
                                    [= {{ value / precision }} {{ salesUnitName | trans }}]
                                </small>
                            </p>
                        {% endif %}
                    {% endif %}

                    {% for itemForm in embed.itemForms if data.product.groupKey == itemForm.vars.value.groupKey %}
                        {% set unitSourcePrice = itemForm.sourceUnitGrossPrice is defined ? itemForm.sourceUnitGrossPrice.vars.value : null %}
                        {% set unitSourcePrice = itemForm.sourceUnitNetPrice is defined ? itemForm.sourceUnitNetPrice.vars.value : unitSourcePrice %}

                        {% include molecule('source-price-form', 'QuoteRequestAgentPage') with {
                            data: {
                                priceForm: itemForm,
                                checkboxName: 'use_default_price',
                                checkboxValue: 1,
                                isChecked: unitSourcePrice == null,
                                checkboxLabel: 'quote_request_page.quote_request.use_default_price' | trans,
                            },
                            attributes: {
                                price: unitSourcePrice,
                            },
                        } only %}
                    {% endfor %}

                {% endblock %}
            {% endembed %}
        {% endblock %}

        {% block shipmentInformation %}
            {% embed molecule('quote-request-shipment-information', 'QuoteRequestPage') ignore missing with {
                data: {
                    shipment: data.shipment,
                    hasMultiShipments: true,
                    priceMode: data.quote.priceMode,
                },
                embed: {
                    shipmentGroupForms: embed.shipmentGroupForms,
                    shipmentHash: embed.shipmentGroup.hash,
                },
            } only %}
                {% block actions %}
                    {% for shipmentGroupForm in embed.shipmentGroupForms if embed.shipmentHash == shipmentGroupForm.vars.value.hash %}
                        {% set unitSourcePrice = shipmentGroupForm.sourcePrice.grossAmount is defined ? shipmentGroupForm.sourcePrice.grossAmount.vars.value : null %}
                        {% set unitSourcePrice = shipmentGroupForm.sourcePrice.netAmount is defined ? shipmentGroupForm.sourcePrice.netAmount.vars.value : unitSourcePrice %}

                        {% include molecule('source-price-form', 'QuoteRequestAgentPage') with {
                            data: {
                                priceForm: shipmentGroupForm,
                                checkboxName: 'use_default_price',
                                checkboxValue: 1,
                                isChecked: unitSourcePrice == null,
                                checkboxLabel: 'quote_request_page.quote_request.use_default_price' | trans,
                            },
                            attributes: {
                                price: unitSourcePrice,
                            },
                        } only %}
                    {% endfor %}
                {% endblock %}
            {% endembed %}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block productsForSingleShipment %}
    {% embed organism('product-and-shipment-view', 'QuoteRequestPage') ignore missing with {
        data: {
            quote: quote,
            items: quote.items,
            shipment: quote.shipment,
            hasMultiShipments: hasMultiShipments,
            isConfiguredBundleEditable: true,
        },
        embed: {
            itemForms: data.quoteRequestForm.latestVersion.quote.items,
            shipmentGroupForms: data.shipmentGroupForms,
        },
    } only %}
        {% block configuredBundle %}
            {% widget 'QuoteConfiguredBundleWidget' args [data.quote] with {
                embed: {
                    itemForms: embed.itemForms,
                },
            } only %}
                {% block bundleItem %}
                    {% embed molecule('configured-bundle', 'ConfigurableBundleWidget') ignore missing with {
                        data: {
                            bundle: bundle,
                            items: data.items,
                            currencyIsoCode: data.currencyIsoCode,
                            priceMode: data.priceMode,
                            isEditable: false,
                        },
                        embed: {
                            itemForms: embed.itemForms,
                        },
                    } only %}
                        {% block bundleProductItem %}
                            {% embed molecule('configured-bundle-product', 'ConfigurableBundleWidget') ignore missing with {
                                data: {
                                    product: item,
                                    currencyIsoCode: data.currencyIsoCode,
                                    priceMode: data.priceMode,
                                },
                                embed: {
                                    itemForms: embed.itemForms,
                                },
                            } only %}
                                {% block quantityCol %}
                                    <div class="{{ config.name }}__col col col--sm-4 col--lg-3">
                                        {% block quantity %}
                                            {{ parent() }}

                                            {% for itemForm in embed.itemForms if data.product.groupKey == itemForm.vars.value.groupKey %}
                                                {% set unitSourcePrice = itemForm.sourceUnitGrossPrice is defined ? itemForm.sourceUnitGrossPrice.vars.value : null %}
                                                {% set unitSourcePrice = itemForm.sourceUnitNetPrice is defined ? itemForm.sourceUnitNetPrice.vars.value : unitSourcePrice %}

                                                {% include molecule('source-price-form', 'QuoteRequestAgentPage') with {
                                                    data: {
                                                        priceForm: itemForm,
                                                        checkboxName: 'use_default_price',
                                                        checkboxValue: 1,
                                                        isChecked: unitSourcePrice == null,
                                                        checkboxLabel: 'quote_request_page.quote_request.use_default_price' | trans,
                                                    },
                                                    attributes: {
                                                        price: unitSourcePrice,
                                                    },
                                                } only %}
                                            {% endfor %}
                                        {% endblock %}
                                    </div>
                                {% endblock %}
                            {% endembed %}
                        {% endblock %}
                    {% endembed %}
                {% endblock %}
            {% endwidget %}
        {% endblock %}

        {% block productListInner %}
            {% set cartItems = embed.itemForms | filter(item => item.vars.value.configuredBundleItem is not defined or item.vars.value.configuredBundleItem is empty) %}
            {% for itemChild in cartItems %}
                {% set cartItem = itemChild.vars.value %}

                {% block productItem %}
                    {% embed molecule('product-cart-item', 'CartPage') ignore missing with {
                        data: {
                            product: cartItem,
                        },
                        embed: {
                            priceMode: data.quote.priceMode,
                            currency: data.quote.currency,
                            itemChild: itemChild,
                        },
                    } only %}
                        {% block additionalInformation %}
                            {% include molecule('quote-request-item-summary', 'QuoteRequestPage') ignore missing with {
                                data: {
                                    priceMode: embed.priceMode,
                                    unitPrice: data.product.unitPrice | money(true, embed.currency.code),
                                    subtotalPrice: data.product.sumSubtotalAggregation | money(true, embed.currency.code),
                                    cartItem: data.product,
                                    currency: embed.currency,
                                },
                            } only %}
                        {% endblock %}

                        {% block actions %}
                            {% if data.product.amountSalesUnit is empty %}
                                {{ 'cart.item_quantity' | trans }}:
                                <strong>{{ data.product.quantity }}</strong>

                                {% if data.product.quantitySalesUnit %}
                                    {% set value = data.product.quantitySalesUnit.value %}
                                    {% set precision = data.product.quantitySalesUnit.precision %}
                                    {% set salesUnitName = data.product.quantitySalesUnit.productMeasurementUnit.name | default('') %}

                                    <p>
                                        <small class="text-secondary">
                                            [= {{ value / precision }} {{ salesUnitName | trans }}]
                                        </small>
                                    </p>
                                {% endif %}
                            {% endif %}

                            {% set unitSourcePrice = embed.itemChild.sourceUnitGrossPrice is defined ? embed.itemChild.sourceUnitGrossPrice.vars.value : null %}
                            {% set unitSourcePrice = embed.itemChild.sourceUnitNetPrice is defined ? embed.itemChild.sourceUnitNetPrice.vars.value : unitSourcePrice %}

                            {% include molecule('source-price-form', 'QuoteRequestAgentPage') with {
                                data: {
                                    priceForm: embed.itemChild,
                                    checkboxName: 'use_default_price',
                                    checkboxValue: 1,
                                    isChecked: unitSourcePrice == null,
                                    checkboxLabel: 'quote_request_page.quote_request.use_default_price' | trans,
                                },
                                attributes: {
                                    price: unitSourcePrice,
                                },
                            } only %}
                        {% endblock %}
                    {% endembed %}
                {% endblock %}
            {% endfor %}
        {% endblock %}

        {% block shipmentInformation %}
            {% embed molecule('quote-request-shipment-information', 'QuoteRequestPage') ignore missing with {
                data: {
                    shipment: data.quote.shipment,
                    priceMode: data.quote.priceMode,
                },
                embed: {
                    shipmentGroupForm: embed.shipmentGroupForms | first,
                },
            } only %}
                {% block actions %}
                    {% if embed.shipmentGroupForm %}
                        {% set unitSourcePrice = embed.shipmentGroupForm.sourcePrice.grossAmount is defined ? embed.shipmentGroupForm.sourcePrice.grossAmount.vars.value : null %}
                        {% set unitSourcePrice = embed.shipmentGroupForm.sourcePrice.netAmount is defined ? embed.shipmentGroupForm.sourcePrice.netAmount.vars.value : unitSourcePrice %}

                        {% include molecule('source-price-form', 'QuoteRequestAgentPage') with {
                            data: {
                                priceForm: embed.shipmentGroupForm,
                                checkboxName: 'use_default_price',
                                checkboxValue: 1,
                                isChecked: unitSourcePrice == null,
                                checkboxLabel: 'quote_request_page.quote_request.use_default_price' | trans,
                            },
                            attributes: {
                                price: unitSourcePrice,
                            },
                        } only %}
                    {% endif %}
                {% endblock %}
            {% endembed %}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block quoteRequestSidebar %}
    {% if quote and quote.items is not empty %}
        {% block delivery %}
            {% embed molecule('quote-request-delivery-summary', 'QuoteRequestPage') ignore missing with {
                data: {
                    quote: quote,
                    hasMultiShipments: hasMultiShipments,
                    isEditable: true,
                    quoteRequestReference: data.quoteRequest.quoteRequestReference,
                }
            } only %}
                {% block body %}
                    {% set urlEditAddress = 'agent/quote-request/checkout-address' %}
                    {% set urlEditShipment = 'agent/quote-request/checkout-shipment' %}
                    {{ parent() }}
                {% endblock %}
            {% endembed %}
        {% endblock %}

        {% block summary %}
            {% include molecule('quote-request-summary', 'QuoteRequestPage') ignore missing with {
                data: {
                    cart: quote,
                    shipmentGroups: data.shipmentGroups,
                },
            } only %}
        {% endblock %}
    {% endif %}

    {% block actions %}
        {% set classButtonBack = 'button button--expand button--hollow' %}
        {% set classButtonEditItems = 'button button--expand' %}
        {% set classButtonSave = 'button button--expand button--success' %}
        {% set classButtonSend = 'button button--expand button--success' %}

        <div class="box spacing-top spacing-top--big">
            {% block actionBack %}
                <a class="{{ classButtonBack }}"
                   href="{{ url('agent/quote-request/details', {quoteRequestReference: data.quoteRequest.quoteRequestReference}) }}"
                   data-init-single-click>
                    {{ 'quote_request_page.quote_request.actions.back_to_view' | trans }}
                </a>
            {% endblock %}

            {% block actionSeparator1 %}
                <hr class="box__separator">
            {% endblock %}

            {% block actionEditItems %}
                <a class="{{ classButtonEditItems }}"
                   href="{{ url('agent/quote-request/edit-items', {quoteRequestReference: data.quoteRequest.quoteRequestReference}) }}"
                   data-init-single-click>
                    {{ 'quote_request_page.quote_request.actions.edit_items' | trans }}
                </a>
            {% endblock %}

            {% block actionSeparator2 %}
                <hr class="box__separator">
            {% endblock %}

            {% block actionSave %}
                <button type="submit" name="save" class="{{ classButtonSave }}" data-init-single-click>
                    {{ 'quote_request_page.quote_request.actions.save' | trans }}
                </button>
            {% endblock %}

            {% if data.quoteRequest.latestVersion.quote.items | length %}
                {% block actionSeparator3 %}
                    <hr class="box__separator">
                {% endblock %}

                {% block actionSend %}
                    <button type="submit" name="sendToCustomer" class="{{ classButtonSend }}" data-init-single-click>
                        {{ 'quote_request_page.quote_request.actions.send_to_customer' | trans }}
                    </button>
                {% endblock %}
            {% endif %}
        </div>
    {% endblock %}
{% endblock %}
